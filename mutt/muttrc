set my_conf = $MUTT_DIR

# global settings
set quit = ask-yes
set mbox_type = Maildir
set folder = $MAILDIR
set header_cache = $XDG_CACHE_HOME/mutt_hcache
set bounce_delivered = no
set check_new = yes
set mark_old = no
set mail_check = 5
set mail_check_recent = no
set sleep_time = 0
set reverse_name = yes
set reverse_realname = yes
set send_charset = "utf-8"
set mime_forward = ask-yes
set mime_forward_decode = no
set tmpdir = $TMPDIR/mutt
unset metoo

# status line
set status_on_top

# navigation
bind index,pager ] next-new-then-unread
bind index,pager [ previous-new-then-unread

# show the incoming mailboxes list (just like "mutt -y") and back when pressing "y"
macro index,pager y "<change-folder>?<toggle-mailboxes>" "show incoming mailboxes list"
bind browser y exit

# make changing folder more contextual
macro index,pager 'c' '<change-folder>?<change-dir><home>^K=<enter>'

# launch folder browser when moving or copying
macro index,pager M "<save-message>?" "move a message to a mailbox"
macro index,pager C "<copy-message>?" "copy a message to a mailbox"

# reading
set mailcap_path = ~/.mutt/mailcap
auto_view text/html text/calendar application/pdf
alternative_order text/plain text/enriched text/html

# extract urls
macro index,pager ,b "<enter-command> set my_pdsave=\$pipe_decode<enter>\
    <enter-command> unset pipe_decode<enter>\
    <pipe-message>extract_url<enter>\
    <enter-command> set pipe_decode=\$my_pdsave<enter>" "get URLs"
macro index,pager ,B "<enter-command> set my_pdsave=\$pipe_decode<enter>\
    <enter-command> set pipe_decode<enter>\
    <pipe-message>extract_url<enter>\
    <enter-command> set pipe_decode=\$my_pdsave<enter>" "decrypt message, then get URLs"

message-hook .  'macro index,pager \cb ,b "URL viewer"'
message-hook ~G 'macro index,pager \cb ,B "URL viewer"'

macro attach O "\
    <enter-command>unset wait_key<enter>\
    <shell-escape>rm -f ~/.tmp/mutt-attach<enter>\
    <save-entry><kill-line>/tmp/mutt-attach<enter>\
    <shell-escape> ~/.tmp/mutt-attach &^A" "open attachment specifying command"

# printing
set print_command="/usr/bin/muttprint"
set print = yes
set print_split
macro index p "<display-toggle-weed><print-message><display-toggle-weed><exit>"
macro pager p "<display-toggle-weed><print-message><display-toggle-weed>"

# format flowed
set text_flowed = no
set wrap = 80

# editor
set editor="vim +/^$"
set include = yes
set user_agent = no
set use_from = yes
set envelope_from = yes
set edit_headers = yes
set copy = yes
set fast_reply = yes
set indent_string="> "
set sig_dashes = yes
set confirmappend = no
# don't ever write bcc headers!
set write_bcc = no

# index
set index_format = "%?M?+& ?%2M %2e %4C %Z %{%d %b %Y %R}  %-25.25L (%?l?%4l&%4c?) %s"
set date_format = "!%a, %d %b, %Y at %I:%M:%S%p %Z"
set mark_old = no
set delete = yes
set strict_threads = yes
set sort = threads
set sort_aux = reverse-last-date-received
unset collapse_unread
unset uncollapse_jump
set sort_re
set reply_regexp = "^(([Rr][Ee]?(\[[0-9]+\])?: *)?(\[[^]]+\] *)?)*"
bind index - collapse-thread
bind index _ collapse-all
bind index gg first-entry
bind index G last-entry
bind index <space>  collapse-thread
bind index <tab> sync-mailbox

# pager
set pager = "builtin"
set pager_context = 5
set pager_index_lines = 15
set pager_stop = "yes"
set tilde
unset markers
set quote_regexp = "^( {0,4}[>|:#%]| {0,4}[a-z0-9]+[>|]+)+"
bind pager gg top
bind pager G bottom

# attachments
bind attach <return> view-mailcap
unset wait_key

# index/pager
bind index,pager R group-reply

# headers
ignore *		
unignore Date From Reply-To To Cc Subject X-Label
hdr_order Date From Reply-To To Cc Subject X-Label

# color scheme
source $my_conf/color.zenburn

# mailboxes
mailboxes `~/scripts/mutt-list-mailboxes "+" "/Inbox" "'" " "`

# alias settings
set alias_file = $my_conf/aliases-new
set sort_alias = alias
set reverse_alias = yes

# abook integration

#set query_command = "abook --mutt-query '%s'"
#bind editor <tab> complete-query
#bind editor ^T complete
#macro index,pager a "<pipe-message>abook --add-email<return>"

# gpg
source $my_conf/gpg.rc
set pgp_sign_as = "$GPGSIGNKEY"
set pgp_verify_sig = yes
set pgp_autosign = yes
set pgp_autoencrypt = yes
set pgp_replyencrypt = yes
set pgp_replysign = yes
set pgp_replysignencrypted = yes
set pgp_use_gpg_agent = yes
set pgp_timeout = 3600
set crypt_verify_sig = yes
set crypt_autosign = yes
set crypt_autoencrypt = yes
set crypt_replyencrypt = yes
set crypt_replysignencrypted = yes

# folder hooks
source "~/scripts/mutt-folder-hook-gen |"
folder-hook . source $my_conf/muttrc.account

# notmuch
macro index,pager <F8> \
    "<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
    <shell-escape>notmuch-mutt -r --prompt search<enter>\
    <change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
    <enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
    "notmuch: search mail"

macro index,pager <F9> \
    "<enter-command>set my_old_pipe_decode=\$pipe_decode my_old_wait_key=\$wait_key nopipe_decode nowait_key<enter>\
    <pipe-message>notmuch-mutt -r thread<enter>\
    <change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\
    <enter-command>set pipe_decode=\$my_old_pipe_decode wait_key=\$my_old_wait_key<enter>" \
    "notmuch: reconstruct thread"

# limit to flagged
macro index .i  "<limit>(~N|~F)<enter>"  "view new/flag"
macro index .a  "<limit>~A<enter>"       "view all"

# rotate identities
macro index,pager,compose I ":source $my_conf/muttrc.identity-rotate<enter>"

# rotate folders
macro index,pager <TAB> ":source $my_conf/muttrc.account-rotate<enter>"

# optional config loading

# notmuch
source "`FILE=$MUTT_DIR/muttrc.notmuch; mutt -v | grep -Fq notmuch || FILE=/dev/null; echo $FILE`" 
# xface
source "`FILE=$MUTT_DIR/muttrc.xface; mutt -v | grep -Fq w3mface || FILE=/dev/null; echo $FILE`" 

macro index,pager ,t \
    "<pipe-message>mutt-todo<enter>" \
    "create todo.txt item from subject"

# load private setup
source $my_conf/muttrc.private
